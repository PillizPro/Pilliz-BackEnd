{
  "name": "Pilliz-BackEnd",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --runInBand",
    "test:watch": "jest --watch --runInBand",
    "test:cov": "jest --coverage --runInBand",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docker:clean": "docker image prune -f && docker compose -f env-dev/docker-compose.yaml down -v",
    "docker:clean:img": "docker image prune -f && docker compose -f env-dev/docker-compose.yaml down -v --rmi all",
    "docker:db": "docker compose -f env-dev/docker-compose.yaml up --build -d pilliz-db-dev dbadmin",
    "docker:db:reset": "docker compose -f env-dev/docker-compose.yaml rm -s -v -f pilliz-db-dev && docker volume rm pilliz-db-dev-data",
    "docker:dev": "docker image prune -f && pnpm docker:db && docker compose -f env-dev/docker-compose.yaml up --build pilliz-backend-dev",
    "docker:lint": "docker compose -f env-dev/docker-compose.yaml exec pilliz-backend-dev pnpm lint",
    "docker:test": "docker image prune -f && docker compose -f env-dev/docker-compose.yaml up --build pilliz-backend-test",
    "docker:test:cov": "docker image prune -f && docker compose -f env-dev/docker-compose.yaml -f env-dev/docker-compose-test-cov.yaml up --build pilliz-backend-test",
    "docker:test:watch": "docker image prune -f && docker compose -f env-dev/docker-compose.yaml -f env-dev/docker-compose-test-watch.yaml up --build pilliz-backend-test",
    "prisma:studio:dev": "dotenv -e env-dev/.env.dev -- npx prisma studio",
    "prisma:migrate:dev": "dotenv -e env-dev/.env.dev -- npx prisma migrate dev",
    "prisma:migrate:reset": "dotenv -e env-dev/.env.dev -- npx prisma migrate reset",
    "prisma:pull:dev": "dotenv -e env-dev/.env.dev -- npx prisma db pull",
    "docker:staging": "docker image prune -f && docker compose -f env-staging/docker-compose-staging-dev.yaml up --build pilliz-backend-staging-dev",
    "prisma:studio:staging": "dotenv -e env-staging/.env.staging -- npx prisma studio",
    "prisma:migrate:staging": "dotenv -e env-staging/.env.staging -- npx prisma migrate dev",
    "prisma:pull:staging": "dotenv -e env-staging/.env.staging -- npx prisma db pull",
    "prisma:studio:prod": "dotenv -e env-prod/.env.prod -- npx prisma studio",
    "prisma:migrate:prod": "dotenv -e env-prod/.env.prod -- npx prisma migrate deploy",
    "prisma:pull:prod": "dotenv -e env-prod/.env.prod -- npx prisma db pull",
    "prisma:generate": "npx prisma generate"
  },
  "dependencies": {
    "@nestjs/common": "^10.2.10",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.3.4",
    "@nestjs/platform-express": "^10.2.10",
    "@nestjs/swagger": "^7.1.16",
    "@prisma/client": "^5.7.0",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cloudinary": "^1.41.0",
    "cross-env": "^7.0.3",
    "express": "^4.18.2",
    "joi": "^17.11.0",
    "reflect-metadata": "^0.1.14",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.2.1",
    "@nestjs/schematics": "^10.0.3",
    "@nestjs/testing": "^10.2.10",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.4",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "dotenv-cli": "^7.3.0",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "prettier": "3.0.2",
    "prisma": "^5.7.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=16.18.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}