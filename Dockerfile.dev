FROM node:18.17.0 AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
RUN rm -f /etc/apt/apt.conf.d/docker-clean
RUN --mount=type=cache,target=/var/cache/apt apt update && \
    apt install -y --no-install-recommends git-all && \
    rm -rf /var/lib/apt/lists/*
RUN echo PS1="'"'\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '"'" >> /etc/profile
RUN echo alias ls="'"'ls --color=auto'"'" >> /etc/profile
WORKDIR /app
RUN chown -R node:node /app
USER node
COPY package.json pnpm-lock.yaml tsconfig.json ./
COPY prisma ./prisma

FROM base AS dev
USER node
ENV NODE_ENV=development
ENV DB_HOST=pilliz-db-dev
ENV REDIS_URL=redis://redis-dev:6379
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm fetch --frozen-lockfile
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
COPY . .
RUN pnpm prisma:generate
CMD [ "pnpm", "start:dev" ]

FROM base AS staging
USER node
ENV NODE_ENV=staging
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm fetch --frozen-lockfile
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
COPY . .
RUN pnpm prisma:generate
CMD [ "pnpm", "start:dev" ]

FROM dev as test
USER node
ENV NODE_ENV=test
CMD [ "pnpm", "test" ]

FROM test as test-cov
USER node
CMD [ "pnpm", "test:cov" ]

FROM test as test-watch
USER node
ENV GIT_WORK_TREE=/app GIT_DIR=/app/.git
CMD [ "pnpm", "test:watch" ]